@model IEnumerable<ItroducereDateCuptor.Blum>
@{
    ViewData["Title"] = "Actualizare";
}

<h2>Lista laminare</h2>


<h3>Bare date afara: <span id="nrBareDateAfara">@ViewBag.CounterBareDateAfara</span></h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diametru)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sarja)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Furnizor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Calitate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sectiune)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lungime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Normalizare)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDatAfara)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsRetur)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataOraLaminare)
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model != null)
    {
        <tbody id="corpTabel">
            @foreach (var item in Model)
            {
            <tr class="@BackgroundColour(item)">
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Diametru)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sarja)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Furnizor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Calitate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sectiune)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lungime)
                </td>
                <td class="@IsNormalisedBackgroundColour(item)">
                    @Html.DisplayFor(modelItem => item.Normalizare)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDatAfara)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsRetur)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataOraLaminare)
                </td>
            </tr>
            }
        </tbody>
    }
</table>

@functions {
    public string BackgroundColour(Blum blum)
    {
        if (blum == null) return "";
        if (blum.IsDatAfara || blum.IsRetur)
            return "background_green";
        return "";
    }

    // Functie verificare daca se normalizeaza si schimba culoare backGround
    public string IsNormalisedBackgroundColour(Blum blum)
    {
        if (blum == null) return "";
        else if (blum.Normalizare == "N") return "background_violet";
        return "";
    }
}

@* Scripturi librarie SignalR, plus signalR create de mine, si site.js *@
@section scripts {
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/signalR.js"></script>
    @*<script src="~/js/site.js"></script>*@
    @*Resetare automata continut pagina pentru a nu intra in standby*@
    <script type="text/javascript">
        function autoRefreshPage() {
            window.location = window.location.href;
        }
        setInterval('autoRefreshPage()', 60000); // Resetare la 60 secunde
    </script>
}